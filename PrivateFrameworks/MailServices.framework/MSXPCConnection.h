//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSXPCConnection.h"

@class MFFuture, NSLock, NSObject<OS_dispatch_queue>, NSXPCInterface, Protocol;

@interface MSXPCConnection : NSXPCConnection
{
    NSLock *_lock;
    NSObject<OS_dispatch_queue> *_queue;
    MFFuture *_connectionFuture;
    NSXPCInterface *_remoteObjectInterface;
    NSXPCInterface *_exportedInterface;
    id _exportedObject;
    CDUnknownBlockType _interruptionHandler;
    CDUnknownBlockType _invalidationHandler;
    int _resumeCount;
    unsigned int _state;
    BOOL _shouldLaunchMobileMail;
    Protocol *_protocol;
}

- (void)_sendInvocation:(id)arg1 remoteInterface:(id)arg2 remoteProxy:(id)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (id)initWithProtocol:(id)arg1;
- (void)_finishFuture:(id)arg1 withConnection:(id)arg2 error:(id)arg3;
- (void)_queue_invokeInvalidationHandler;
- (CDUnknownBlockType)_nts_wrappedInterruptionHandler;
- (void)_invokeInterruptionHandlerForFuture:(id)arg1;
- (id)_connectionForFuture:(id)arg1;
- (void)_invalidateFuture:(id)arg1;
@property(nonatomic) BOOL shouldLaunchMobileMail; // @synthesize shouldLaunchMobileMail=_shouldLaunchMobileMail;
@property(readonly, retain, nonatomic) Protocol *protocol; // @synthesize protocol=_protocol;
- (int)processIdentifier;
- (void)setInterruptionHandler:(CDUnknownBlockType)arg1;
- (id)_connection;
- (void)setExportedObject:(id)arg1;
- (void)setExportedInterface:(id)arg1;
- (void)setInvalidationHandler:(CDUnknownBlockType)arg1;
- (id)remoteObjectProxy;
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;
- (void)resume;
- (void)setRemoteObjectInterface:(id)arg1;
- (id)exportedInterface;
- (void)suspend;
- (void)invalidate;
- (id)description;
- (void)dealloc;
- (id)remoteObjectInterface;
- (unsigned int)effectiveGroupIdentifier;
- (unsigned int)effectiveUserIdentifier;
- (int)auditSessionIdentifier;
- (id)exportedObject;
- (CDUnknownBlockType)invalidationHandler;
- (CDUnknownBlockType)interruptionHandler;

@end

