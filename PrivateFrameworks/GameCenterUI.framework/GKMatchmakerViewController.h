//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UINavigationController.h"

#import "GKMatchDelegate.h"

@class GKHostedMatchmakerViewController, GKInvite, GKMatch, GKMatchRequest, GKRemoteMatchmakerViewController, NSMutableArray, NSString, UIAlertController;

@interface GKMatchmakerViewController : UINavigationController <GKMatchDelegate>
{
    BOOL _hosted;
    id <GKMatchmakerViewControllerDelegate> _matchmakerDelegateWeak;
    GKMatchRequest *_matchRequest;
    GKHostedMatchmakerViewController *_hostedViewController;
    GKRemoteMatchmakerViewController *_remoteViewController;
    GKInvite *_acceptedInvite;
    GKMatch *_match;
    NSMutableArray *_hostedPlayers;
    UIAlertController *_alertController;
}

+ (BOOL)_preventsAppearanceProxyCustomization;
- (void)sendData:(id)arg1;
@property(retain, nonatomic) NSMutableArray *hostedPlayers; // @synthesize hostedPlayers=_hostedPlayers;
- (void)startMatchingWithRequest:(id)arg1;
- (void)setHostedPlayerReady:(id)arg1;
@property(copy, nonatomic) NSString *defaultInvitationMessage;
- (void)addPlayersToMatch:(id)arg1;
- (void)setHostedPlayer:(id)arg1 didConnect:(BOOL)arg2;
- (id)initWithInvite:(id)arg1;
@property(nonatomic) id <GKMatchmakerViewControllerDelegate> matchmakerDelegate; // @synthesize matchmakerDelegate=_matchmakerDelegateWeak;
- (void)invitedPlayer:(id)arg1 responded:(int)arg2;
- (void)finishWithPlayers;
- (void)finishWithMatch;
- (void)setHostedPlayer:(id)arg1 connected:(BOOL)arg2;
- (void)createMatchForAcceptedInvite;
- (void)inviterCancelledNotification:(id)arg1;
- (void)playersToInvite:(id)arg1;
- (void)setupNotifications;
@property(retain, nonatomic) GKHostedMatchmakerViewController *hostedViewController; // @synthesize hostedViewController=_hostedViewController;
- (id)initWithMatchRequest:(id)arg1;
- (void)authenticationChanged:(id)arg1;
- (void)_setupChildViewController;
@property(retain, nonatomic) GKMatch *match; // @synthesize match=_match;
- (void)setBrowsingForNearbyPlayers:(BOOL)arg1;
@property(readonly, retain, nonatomic) GKMatchRequest *matchRequest; // @synthesize matchRequest=_matchRequest;
- (void)cancelInviteToPlayer:(id)arg1;
- (void)localPlayerAcceptedGameInvite:(id)arg1;
- (void)match:(id)arg1 didFailWithError:(id)arg2;
- (void)match:(id)arg1 player:(id)arg2 didChangeConnectionState:(int)arg3;
- (void)match:(id)arg1 didReceiveData:(id)arg2 fromRemotePlayer:(id)arg3;
@property(retain, nonatomic) GKInvite *acceptedInvite; // @synthesize acceptedInvite=_acceptedInvite;
@property(nonatomic, getter=isHosted) BOOL hosted; // @synthesize hosted=_hosted;
- (void)finishWithError:(id)arg1;
@property(retain, nonatomic) GKRemoteMatchmakerViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
@property(retain, nonatomic) UIAlertController *alertController; // @synthesize alertController=_alertController;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)arg1;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (unsigned int)supportedInterfaceOrientations;
- (void)applicationWillEnterForeground:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)cancel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

