//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <CloudDocsDaemon/BRCFSSchedulerBase.h>

#import "BRCModule.h"

@class BRCCountedSet, NSMutableSet, NSObject<OS_dispatch_group>, NSString;

@interface BRCApplyScheduler : BRCFSSchedulerBase <BRCModule>
{
    BRCCountedSet *_coordinatedWriters;
    NSMutableSet *_watchingFaults;
    BOOL _applyCountReachedMax;
    NSObject<OS_dispatch_group> *_writerGroup;
}

@property(readonly, nonatomic) NSObject<OS_dispatch_group> *writerGroup; // @synthesize writerGroup=_writerGroup;
- (void)didSyncDownZone:(id)arg1 requestID:(unsigned long long)arg2 upToRank:(long long)arg3 caughtUpWithServer:(BOOL)arg4;
- (void)endWriteCoordinationInZone:(id)arg1;
- (BOOL)startWriteCoordinationInZone:(id)arg1;
- (void)monitorFaultingForContainer:(id)arg1;
- (void)repopulateThrottlesForZone:(id)arg1;
- (void)didReparentOrKillItemID:(id)arg1 parentItemID:(id)arg2 zone:(id)arg3;
- (void)didCreateMissingParentID:(id)arg1 zone:(id)arg2;
- (void)createThrottleID:(long long)arg1 zone:(id)arg2 itemID:(id)arg3 state:(int)arg4 kind:(unsigned int)arg5;
- (void)updateThrottleID:(long long)arg1 zone:(id)arg2 state:(int)arg3 kind:(unsigned int)arg4;
- (void)rescheduleSuspendedThrottlesForZone:(id)arg1 state:(int)arg2;
- (unsigned int)_writeCoordinationCount;
- (void)_retriedThrottleID:(long long)arg1 zone:(id)arg2 kind:(unsigned int)arg3;
- (void)_handleWatchingFaults;
- (BOOL)_scheduleOne:(id)arg1;
- (void)deleteExpiredThrottles;
- (void)updateThrottleID:(long long)arg1 zone:(id)arg2 state:(int)arg3;
- (void)_describe:(id)arg1 zone:(id)arg2 now:(long long)arg3 context:(id)arg4;
- (void)_schedule;
- (id)initWithAccountSession:(id)arg1;
- (void)_close;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(nonatomic) BOOL isCancelled;
@property(readonly) Class superclass;

@end

