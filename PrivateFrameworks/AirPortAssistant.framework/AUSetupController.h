//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <AirPortAssistant/AssistantCallbackController.h>

#import "AutoGuessSetup.h"
#import "BaseStationSetup.h"
#import "SetupUIConfigDelegateResult.h"

@class NSDate, NSDictionary, NSMutableSet, NSString;

@interface AUSetupController : AssistantCallbackController <SetupUIConfigDelegateResult, AutoGuessSetup, BaseStationSetup>
{
    id _context;
    BOOL _autoJoinState;
    BOOL _scanningState;
    BOOL _busy;
    BOOL _initializedBasePasswordFlag;
    BOOL _performingManualRead;
    BOOL _needToNilBonjour;
    struct BSConfigurationContext *_configContext;
    NSMutableSet *_setupDelegates;
    id _uiConfigDelegate;
    NSString *_autoGuessSetupRecommendation;
    NSDictionary *_lastInstrumentation;
    BOOL _rememberDiskPassword;
    NSDate *_lastHeardFromDevice;
    NSString *_lastSystemName;
    NSString *_lastDNSName;
    NSString *_keychainBasePassword;
    NSString *_keychainWiFiPassword;
    NSString *_keychainDiskPassword;
    BOOL _activeTask;
}

+ (id)setupController;
+ (void)initialize;
- (long)cancelTask;
- (long)closeAllConnections;
- (id)targetBaseInfoDict;
- (void)logChangesToCCL;
- (void)handleTaskComplete;
- (void)handleSetupComplete:(long)arg1;
- (void)updateLastHeardFromDevice;
- (void)handleBusyComplete;
- (BOOL)performingManualRead;
- (void)resetWiFiState;
@property(retain, nonatomic) NSString *lastDNSName; // @synthesize lastDNSName=_lastDNSName;
@property(retain, nonatomic) NSString *lastSystemName; // @synthesize lastSystemName=_lastSystemName;
@property(retain, nonatomic) NSString *autoGuessSetupRecommendation; // @synthesize autoGuessSetupRecommendation=_autoGuessSetupRecommendation;
- (int)ethernetPortCount;
- (BOOL)dirty;
@property(retain, nonatomic) NSDictionary *bonjourRecord;
@property(readonly, nonatomic) NSDate *lastHeardFromDevice; // @synthesize lastHeardFromDevice=_lastHeardFromDevice;
- (long)setMonitorForChanges:(BOOL)arg1;
- (long)taskArchiveDiskAsync:(id)arg1;
- (long)taskEraseDiskAsync:(id)arg1;
- (long)taskUploadFirmwareAsync:(id)arg1;
- (long)taskRestoreDefaultsAsync:(BOOL)arg1;
- (long)taskRestartAsync;
- (int)busyState;
- (unsigned int)taskCode;
- (long)rpcWPSAllowClientAsync:(id)arg1;
- (long)rpcWPSStopAsync;
- (long)rpcWPSStartAsync:(BOOL)arg1 dayPass:(BOOL)arg2 timeout:(unsigned int)arg3;
- (long)rpcRenewDHCPLeaseAsync;
- (long)rpcDisconnectAllDiskUsersWithMessageAsync:(id)arg1;
- (long)rpcRefreshBSSettingAsync:(int)arg1;
- (long)rpcStartRemoteBrowse:(id)arg1 withService:(id)arg2;
- (long)rpcSystemInterfacesAsync;
- (void)deleteKeychainWirelessPassword;
- (void)saveKeychainWirelessPassword;
- (long)updateKeychainWithPasswordsWithStatus:(long)arg1;
- (void)updateRememberKeychainFlagsIfInitializing;
- (id)allKeychainMACAddresses;
- (long)snapshotPop:(BOOL)arg1;
- (long)snapshotPush;
- (BOOL)snapshotDirty;
- (void)snapshotResetAll;
- (id)snapshotChangedKeys;
- (long)readAllPropertiesFromBaseAsync;
- (long)joinAndBrowseAsync;
- (long)joinAsync;
@property(retain, nonatomic) NSString *keychainDiskPassword; // @dynamic keychainDiskPassword;
@property(retain, nonatomic) NSString *keychainWiFiPassword; // @dynamic keychainWiFiPassword;
- (long)unIgnoreProblemCode:(unsigned int)arg1;
- (long)ignoreProblemCode:(unsigned int)arg1;
- (id)validateSettingsAndGetErrors:(id)arg1;
- (id)validateAllSettingsAndGetErrors;
- (long)unignoredProblemCount;
- (BOOL)hasACPFeature:(unsigned int)arg1;
- (long)setValue:(id)arg1 forSettingPath:(id)arg2;
- (long)setValue:(id)arg1 forBSSetting:(int)arg2;
- (long)setupWithTargetBaseStation:(id)arg1 andSettings:(id)arg2;
- (long)setupWithTargetNetwork:(id)arg1;
@property(nonatomic) BOOL activeTask; // @synthesize activeTask=_activeTask;
- (int)taskState;
- (long)getValue:(id *)arg1 forSettingPath:(id)arg2;
@property(retain, nonatomic) NSString *keychainBasePassword; // @dynamic keychainBasePassword;
- (id)bestKeychainMACAddress;
- (void)saveKeychainBasePassword;
- (long)updateKeychainWithPasswords;
- (void)deleteKeychainBasePassword;
- (void)loadKeychainWirelessPassword;
- (void)loadKeychainBasePassword;
- (void)updateRememberKeychainFlagsButSkipBasePassword:(BOOL)arg1;
- (long)getValue:(id *)arg1 forBSSetting:(int)arg2;
- (struct _BaseStation *)bsRef;
- (void)setupWiFiState;
- (void)handleBusyStart;
- (long)readPropertyListFromBaseAsync:(id)arg1;
@property(nonatomic) BOOL rememberDiskPassword; // @synthesize rememberDiskPassword=_rememberDiskPassword;
@property(nonatomic) BOOL rememberWiFiPassword;
@property(nonatomic) BOOL rememberBasePassword;
- (int)stateForProblem:(unsigned int)arg1;
- (long)copyValue:(id *)arg1 forSettingPath:(id)arg2;
- (long)copyValue:(id *)arg1 forBSSetting:(int)arg2;
@property(nonatomic) id <SetupUIConfigDelegate> uiConfigDelegate; // @synthesize uiConfigDelegate=_uiConfigDelegate;
- (long)closeAllConnections:(BOOL)arg1;
- (void)applicationDidEnterBackgroundNotification:(id)arg1;
- (void)setupUIConfigResult:(long)arg1 withOptions:(id)arg2;
- (long)cancelSetup;
- (long)updateSettingsAsync;
- (long)setupFromAutoguessRecommendation:(id)arg1 withOptions:(id)arg2;
@property(readonly, nonatomic) NSMutableSet *setupDelegates; // @synthesize setupDelegates=_setupDelegates;
- (long)subclassAssistantCallback:(struct AssistantCallbackContext *)arg1;
@property(retain, nonatomic) NSDictionary *lastInstrumentation; // @synthesize lastInstrumentation=_lastInstrumentation;
@property(nonatomic) id context; // @synthesize context=_context;
- (id)init;
- (void)dealloc;
- (BOOL)isMonitoring;

// Remaining properties
@property(retain) NSDictionary *restoreRecommendation;

@end

