//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <PowerlogCore/PLOperator.h>

@class NSArray, NSString, PLEntry;

@interface PLRail : PLOperator
{
    BOOL _isNegativePowerSupported;
    BOOL _logRail;
    BOOL _cacheOn;
    short _railDirection;
    NSString *_railName;
    NSArray *_cacheResults;
    PLEntry *_lastSnapshot;
    double _selfAdjustedSafeTimeForModeling;
    struct _PLTimeIntervalRange _cacheTimeRange;
}

+ (void)safeGuardAllRails;
+ (id)snapRailFromRailName:(id)arg1;
+ (id)entryEventNoneDefinitions;
+ (id)railFromRailName:(id)arg1;
+ (double)getEnergyInRail:(id)arg1 inTimeRange:(struct _PLTimeIntervalRange)arg2;
+ (id)getSnappedRailName:(id)arg1;
+ (BOOL)isSnapRail:(id)arg1;
+ (id)entryEventNoneDefinitionRail;
- (double)getEnergyInRange:(struct _PLTimeIntervalRange)arg1;
- (double)safeTimeForModeling;
@property(readonly, retain) NSString *railName; // @synthesize railName=_railName;
- (id)trimmingConditionsForRolloverAtDate:(id)arg1;
- (void)initOperatorDependancies;
- (void)addSnapshot:(id)arg1 withPower:(double)arg2;
@property BOOL logRail; // @synthesize logRail=_logRail;
@property(readonly) double selfAdjustedSafeTimeForModeling; // @synthesize selfAdjustedSafeTimeForModeling=_selfAdjustedSafeTimeForModeling;
- (void)cacheRailDataForTimeInterval:(struct _PLTimeIntervalRange)arg1;
- (id)getSnapshotTimeInRange:(struct _PLTimeIntervalRange)arg1;
- (void)batchAddSnapshots:(id)arg1;
- (id)initWithName:(id)arg1 withRailDirection:(short)arg2 withNegativePowerSupport:(BOOL)arg3 isLoggingOnByDefault:(BOOL)arg4;
@property BOOL cacheOn; // @synthesize cacheOn=_cacheOn;
@property struct _PLTimeIntervalRange cacheTimeRange; // @synthesize cacheTimeRange=_cacheTimeRange;
@property(retain) NSArray *cacheResults; // @synthesize cacheResults=_cacheResults;
- (void)logCacheStats:(id)arg1;
- (id)getSnapshotsInRange:(struct _PLTimeIntervalRange)arg1;
- (BOOL)useCachedDataForTimeInterval:(struct _PLTimeIntervalRange)arg1;
- (id)generateSnapshotEntry:(id)arg1 withPower:(double)arg2;
@property(readonly) BOOL isNegativePowerSupported; // @synthesize isNegativePowerSupported=_isNegativePowerSupported;
- (BOOL)isRailPowerEqual:(double)arg1 withOtherPower:(double)arg2;
- (id)trimBatchSnapShots:(id)arg1;
@property(readonly) short railDirection; // @synthesize railDirection=_railDirection;
- (double)timeOfLastSnapshot;
- (void)clearCache;
- (void).cxx_destruct;
@property(retain, nonatomic) PLEntry *lastSnapshot; // @synthesize lastSnapshot=_lastSnapshot;

@end

