//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "HAPAccessoryDelegate.h"
#import "HMMessageReceiver.h"
#import "NSSecureCoding.h"

@class HAPAccessory, HMDAccessoryManager, HMDHome, HMDRoom, HMMessageDispatcher, NSArray, NSData, NSMutableArray, NSMutableSet, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString, NSUUID;

@interface HMDAccessory : NSObject <NSSecureCoding, HMMessageReceiver, HAPAccessoryDelegate>
{
    BOOL _reachable;
    BOOL _primary;
    BOOL _paired;
    BOOL _blocked;
    BOOL _unblockPending;
    BOOL _remoteAccessEnabled;
    HMDHome *_home;
    NSString *_name;
    NSUUID *_uuid;
    NSString *_uniqueIdentifier;
    NSString *_identifier;
    NSString *_configurationAppIdentifier;
    NSString *_providedName;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_dispatch_source> *_pairingRetryTimer;
    NSMutableArray *_discoveredServices;
    HMMessageDispatcher *_msgDispatcher;
    HAPAccessory *_hapAccessory;
    HMDRoom *_room;
    HMDAccessory *_bridge;
    NSMutableSet *_identifiersForBridgedAccessories;
    int _linkType;
    HMDAccessoryManager *_accessoryManager;
    NSData *_publicKey;
    NSString *_pairingUsername;
}

+ (id)serviceFilterSet;
+ (BOOL)supportsSecureCoding;
@property(readonly, copy, nonatomic) NSArray *services;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(copy, nonatomic, getter=getName) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSMutableSet *identifiersForBridgedAccessories; // @synthesize identifiersForBridgedAccessories=_identifiersForBridgedAccessories;
@property(retain, nonatomic) NSMutableArray *discoveredServices; // @synthesize discoveredServices=_discoveredServices;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *pairingRetryTimer; // @synthesize pairingRetryTimer=_pairingRetryTimer;
@property(retain, nonatomic) NSString *providedName; // @synthesize providedName=_providedName;
@property(nonatomic, getter=isPaired) BOOL paired; // @synthesize paired=_paired;
- (void)updateReachability:(BOOL)arg1;
- (void)didEncounterError:(id)arg1;
- (void)removeBridgedAccessory:(id)arg1;
- (void)addBridgedAccessory:(id)arg1;
- (void)savePublicKeyToKeychain;
- (void)registerForIdentifyWithMessageDispatcher:(id)arg1;
- (void)configureWithAccessory:(id)arg1 forRemoval:(BOOL)arg2;
- (id)findCharacteristicType:(id)arg1 forServiceType:(id)arg2;
@property(nonatomic, getter=isBlocked) BOOL blocked; // @synthesize blocked=_blocked;
@property(nonatomic, getter=isRemoteAccessEnabled) BOOL remoteAccessEnabled; // @synthesize remoteAccessEnabled=_remoteAccessEnabled;
- (void)_notifyConnectivityChangedWithReachabilityState:(BOOL)arg1 remoteAccessChanged:(BOOL)arg2;
- (void)_enableNotificationForCharacteristic:(id)arg1 message:(id)arg2;
- (void)_notifyCharacteristicNotificationChanges:(id)arg1 message:(id)arg2;
- (id)hmdCharacteristicFromHapCharacteristic:(id)arg1;
- (void)_readValueForCharacteristic:(id)arg1 messageIdentifier:(id)arg2 responseHandler:(CDUnknownBlockType)arg3;
- (void)_writeValue:(id)arg1 forCharacteristic:(id)arg2 authorizationData:(id)arg3 identifier:(id)arg4 queue:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)notifyValue:(id)arg1 error:(id)arg2 identifier:(id)arg3 forCharacteristic:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)hmdCharacteristicResponses:(id)arg1 mapping:(id)arg2 overallError:(id)arg3;
- (id)hapCharacteristicWriteTuples:(id)arg1 hmdResponseTuples:(id *)arg2 mapping:(id *)arg3;
- (void)_handleUpdateAuthorizationData:(id)arg1;
- (void)_handleUpdateAssociatedServiceType:(id)arg1;
- (void)_handleRenameService:(id)arg1;
- (void)_handleUpdateRoom:(id)arg1;
- (void)_handleCharacteristicEnableNotification:(id)arg1;
- (void)_handlePrepareCharacteristicRead:(id)arg1;
- (void)_handleCharacteristicRead:(id)arg1;
- (void)_handlePrepareCharacteristicWrite:(id)arg1;
- (void)_handleCharacteristicWrite:(id)arg1;
- (id)initWithAccessory:(id)arg1 messageDispatcher:(id)arg2;
- (void)_sendBlockedNotification:(BOOL)arg1 withError:(id)arg2 withIdentifier:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
@property(retain, nonatomic) NSString *pairingUsername; // @synthesize pairingUsername=_pairingUsername;
- (void)_handleIdentify:(id)arg1;
- (void)_resetCharacteristicNotifications;
- (id)_populateServices:(id *)arg1;
- (void)configureWithAccessory:(id)arg1 forRemoval:(BOOL)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)blockWithError:(id)arg1;
- (void)_setPaired:(BOOL)arg1;
@property(retain, nonatomic) HAPAccessory *hapAccessory; // @synthesize hapAccessory=_hapAccessory;
- (id)descriptionNonBlocking;
- (BOOL)_isPaired;
- (void)_setHAPAccessory:(id)arg1;
@property(retain, nonatomic) NSString *configurationAppIdentifier; // @synthesize configurationAppIdentifier=_configurationAppIdentifier;
- (void)remoteAccessEnabled:(BOOL)arg1;
- (id)findCharacteristic:(id)arg1 forService:(id)arg2;
- (id)findService:(id)arg1;
- (void)unblockWithIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
@property(nonatomic) BOOL unblockPending; // @synthesize unblockPending=_unblockPending;
- (void)setPairingUsername:(id)arg1 publicKey:(id)arg2;
@property(readonly, nonatomic) NSString *serverIdentifier;
- (void)updateRoom:(id)arg1;
- (void)_handleRename:(id)arg1;
- (void)_remoteAccessEnabled:(BOOL)arg1;
- (id)getConfiguredName;
- (void)configure:(id)arg1 msgDispatcher:(id)arg2 accessoryManager:(id)arg3;
@property(nonatomic) __weak HMDAccessory *bridge; // @synthesize bridge=_bridge;
- (void)registerForMessagesWithNewUUID:(id)arg1;
@property(retain, nonatomic) HMDRoom *room; // @synthesize room=_room;
@property(nonatomic) __weak HMDAccessoryManager *accessoryManager; // @synthesize accessoryManager=_accessoryManager;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (void)_registerForMessages;
@property(retain, nonatomic) HMMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property(nonatomic) __weak HMDHome *home; // @synthesize home=_home;
@property(nonatomic, getter=isPrimary) BOOL primary; // @synthesize primary=_primary;
- (void)accessoryDidBecomeUnreachable:(id)arg1;
- (void)accessoryDidBecomeReachable:(id)arg1;
- (void)_setReachable:(BOOL)arg1;
- (BOOL)_isReachable;
@property(nonatomic, getter=isReachable) BOOL reachable; // @synthesize reachable=_reachable;
@property(readonly, nonatomic) BOOL supportsGroupedRequests;
- (void)writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) int linkType; // @synthesize linkType=_linkType;
- (void)_writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) NSData *publicKey; // @synthesize publicKey=_publicKey;
@property(readonly, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
- (BOOL)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

