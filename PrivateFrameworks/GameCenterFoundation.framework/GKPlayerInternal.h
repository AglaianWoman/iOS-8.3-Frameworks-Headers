//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <GameCenterFoundation/GKInternalRepresentation.h>

@class GKGameInternal, NSArray, NSDate, NSDictionary, NSNumber, NSString;

@interface GKPlayerInternal : GKInternalRepresentation
{
    NSString *_playerID;
    NSString *_alias;
    NSDictionary *_photos;
    unsigned short _numberOfFriends;
    unsigned short _numberOfGames;
    unsigned short _numberOfFriendsInCommon;
    unsigned short _numberOfGamesInCommon;
    unsigned int _numberOfAchievements;
    unsigned int _numberOfAchievementPoints;
    union {
        struct {
            unsigned int _unused:8;
            unsigned int _purpleBuddyAccount:1;
            unsigned int _underage:1;
            unsigned int _photoPending:1;
            unsigned int _findable:1;
            unsigned int _reserved:18;
        } ;
        unsigned int _value;
    } _flags;
}

+ (Class)classForFamiliarity:(int)arg1;
+ (id)compositeNameForFirstName:(id)arg1 lastName:(id)arg2;
+ (id)displayNameWithOptions:(unsigned char)arg1 alias:(id)arg2 composite:(id)arg3;
+ (id)secureCodedPropertyKeys;
@property(retain, nonatomic) NSArray *friends; // @dynamic friends;
@property(retain, nonatomic) NSString *accountName; // @dynamic accountName;
@property(retain, nonatomic) NSArray *emailAddresses; // @dynamic emailAddresses;
@property(retain, nonatomic) NSDictionary *photos; // @synthesize photos=_photos;
@property(retain, nonatomic) NSString *playerID; // @synthesize playerID=_playerID;
@property(nonatomic) unsigned int flags; // @dynamic flags;
@property(retain, nonatomic) GKGameInternal *lastPlayedGame; // @dynamic lastPlayedGame;
- (id)conciseDescription;
@property(nonatomic, getter=isUnderage) BOOL underage; // @dynamic underage;
@property(readonly, nonatomic) BOOL isAutomatchPlayer;
@property(nonatomic, getter=isPurpleBuddyAccount) BOOL purpleBuddyAccount; // @dynamic purpleBuddyAccount;
@property(readonly, nonatomic) BOOL isLocalPlayer;
@property(readonly, nonatomic) BOOL isFriend;
- (id)displayNameWithOptions:(unsigned char)arg1;
@property(nonatomic) unsigned int numberOfAchievementPoints; // @synthesize numberOfAchievementPoints=_numberOfAchievementPoints;
@property(nonatomic) unsigned short numberOfGamesInCommon; // @synthesize numberOfGamesInCommon=_numberOfGamesInCommon;
@property(nonatomic) unsigned short numberOfGames; // @synthesize numberOfGames=_numberOfGames;
@property(nonatomic) unsigned short numberOfFriendsInCommon; // @synthesize numberOfFriendsInCommon=_numberOfFriendsInCommon;
@property(nonatomic) unsigned short numberOfChallenges; // @dynamic numberOfChallenges;
@property(nonatomic) unsigned short numberOfTurns; // @dynamic numberOfTurns;
@property(nonatomic) unsigned short numberOfRequests; // @dynamic numberOfRequests;
- (void)setAllowNearbyMultiplayer:(BOOL)arg1;
- (BOOL)allowNearbyMultiplayer;
@property(nonatomic, getter=isPhotoPending) BOOL photoPending; // @dynamic photoPending;
@property(nonatomic, getter=isFindable) BOOL findable; // @dynamic findable;
@property(retain, nonatomic) NSNumber *iCloudUserID; // @dynamic iCloudUserID;
@property(retain, nonatomic) NSString *facebookUserID; // @dynamic facebookUserID;
@property(retain, nonatomic) NSString *compositeName; // @dynamic compositeName;
@property(nonatomic) unsigned int numberOfAchievements; // @synthesize numberOfAchievements=_numberOfAchievements;
@property(readonly, nonatomic) BOOL isAnonymousPlayer;
@property(readonly, nonatomic) BOOL isUnknownPlayer;
- (int)defaultFamiliarity;
@property(nonatomic) unsigned short numberOfFriends; // @synthesize numberOfFriends=_numberOfFriends;
- (id)minimalInternal;
- (id)serverRepresentation;
@property(retain, nonatomic) NSString *alias; // @synthesize alias=_alias;
@property(retain, nonatomic) NSString *lastName; // @dynamic lastName;
@property(retain, nonatomic) NSString *firstName; // @dynamic firstName;
@property(retain, nonatomic) NSString *status; // @dynamic status;
- (id)cacheKey;
@property(readonly, nonatomic) BOOL isLoaded;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
@property(retain, nonatomic) NSDate *lastPlayedDate; // @dynamic lastPlayedDate;

@end

