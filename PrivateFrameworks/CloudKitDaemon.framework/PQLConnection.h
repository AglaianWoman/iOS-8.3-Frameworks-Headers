//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSError, NSMutableArray, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString, NSURL;

@interface PQLConnection : NSObject
{
    struct sqlite3 *_db;
    int _suspendCaching;
    int _savePointLevel;
    int _skipBatchStop;
    int _vacuumTracker;
    NSMutableArray *_flushNotifications;
    NSObject<OS_dispatch_source> *_batchingTimer;
    double _batchingPeriod;
    int _batchingChangesLimit;
    int _batchingChangesCount;
    int _cacheSize;
    BOOL _useBatching;
    BOOL _batchStarted;
    BOOL _useQueue;
    struct cache_s *_preparedStatements;
    NSObject<OS_dispatch_source> *_stmtCacheSource;
    NSMutableArray *_stmtCacheCleanupQueue;
    BOOL _traced;
    BOOL _crashIfUsedAfterClose;
    NSString *_label;
    NSURL *_url;
    CDUnknownBlockType _lockedHandler;
    CDUnknownBlockType _autoRollbackHandler;
    CDUnknownBlockType _sqliteErrorHandler;
    CDUnknownBlockType _preFlushHook;
    CDUnknownBlockType _postFlushHook;
    CDUnknownBlockType _profilingHook;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSError *_lastError;
}

+ (void)initialize;
@property(nonatomic) BOOL crashIfUsedAfterClose; // @synthesize crashIfUsedAfterClose=_crashIfUsedAfterClose;
@property(nonatomic, getter=isTraced) BOOL traced; // @synthesize traced=_traced;
@property(copy, nonatomic) CDUnknownBlockType profilingHook; // @synthesize profilingHook=_profilingHook;
@property(copy, nonatomic) CDUnknownBlockType postFlushHook; // @synthesize postFlushHook=_postFlushHook;
@property(copy, nonatomic) CDUnknownBlockType preFlushHook; // @synthesize preFlushHook=_preFlushHook;
@property(copy, nonatomic) CDUnknownBlockType sqliteErrorHandler; // @synthesize sqliteErrorHandler=_sqliteErrorHandler;
@property(copy, nonatomic) CDUnknownBlockType autoRollbackHandler; // @synthesize autoRollbackHandler=_autoRollbackHandler;
@property(copy, nonatomic) CDUnknownBlockType lockedHandler; // @synthesize lockedHandler=_lockedHandler;
- (id)fetchObject:(CDUnknownBlockType)arg1 sql:(id)arg2 args:(void *)arg3;
- (id)fetchObjectOfClass:(Class)arg1 sql:(id)arg2 args:(void *)arg3;
- (id)fetchObjectOfClass:(Class)arg1 initializer:(SEL)arg2 sql:(id)arg3;
- (id)fetch:(id)arg1 args:(void *)arg2;
- (BOOL)execute:(id)arg1 args:(void *)arg2;
@property(readonly, nonatomic) BOOL isInTransaction;
@property(readonly, nonatomic) BOOL isInBatch;
- (void)_fireFlushNotifications;
- (void)_batchStopIfNeeded;
- (void)_batchStartIfNeeded;
@property(nonatomic) unsigned long statementCacheMaxCount;
- (id)fetchObjectOfClass:(Class)arg1 initializer:(SEL)arg2 sql:(id)arg3 args:(void *)arg4;
- (id)_newStatementForFormat:(id)arg1 arguments:(void *)arg2;
- (BOOL)destroyDatabaseWithError:(id *)arg1;
- (BOOL)openAtURL:(id)arg1 sharedCache:(BOOL)arg2 error:(id *)arg3;
- (BOOL)_performWithFlags:(unsigned int)arg1 action:(CDUnknownBlockType)arg2 whenFlushed:(CDUnknownBlockType)arg3;
- (void)_vacuumIfNeeded;
- (int)_vacuumMode;
- (BOOL)_execute:(id)arg1 mustSucceed:(BOOL)arg2 bindings:(void *)arg3;
- (void)_createCacheIfNeeded;
- (void)_resetState;
- (void)_clearStatementCache;
- (id)_description:(BOOL)arg1;
- (void)forceBatchStart;
@property(retain, nonatomic) NSError *lastError; // @synthesize lastError=_lastError;
- (BOOL)performWithFlags:(unsigned int)arg1 action:(CDUnknownBlockType)arg2 whenFlushed:(CDUnknownBlockType)arg3;
- (void)groupInBatch:(CDUnknownBlockType)arg1;
- (BOOL)backupToURL:(id)arg1 progress:(CDUnknownBlockType)arg2;
- (BOOL)setUserVersion:(int)arg1;
@property(readonly, nonatomic) struct sqlite3 *dbHandle; // @synthesize dbHandle=_db;
- (BOOL)performWithFlags:(unsigned int)arg1 action:(CDUnknownBlockType)arg2;
- (void)useBatchingWithDelay:(double)arg1 changeCount:(int)arg2;
- (id)userVersion;
- (id)fetchObject:(CDUnknownBlockType)arg1 sql:(id)arg2;
- (id)fetch:(id)arg1;
@property(readonly, nonatomic) long long lastInsertedRowID;
- (id)fetchObjectOfClass:(Class)arg1 sql:(id)arg2;
- (BOOL)registerFunction:(id)arg1 nArgs:(int)arg2 handler:(CDUnknownBlockType)arg3;
- (BOOL)close:(id *)arg1;
- (BOOL)setupPragmas;
- (BOOL)execute:(id)arg1;
- (BOOL)openAtURL:(id)arg1 withFlags:(int)arg2 error:(id *)arg3;
- (BOOL)executeRaw:(id)arg1;
@property(readonly, nonatomic) long long changes;
- (void)useSerialQueue;
- (BOOL)groupInTransaction:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
- (void)flush;
@property(readonly, copy, nonatomic) NSURL *url; // @synthesize url=_url;
- (id)debugDescription;
- (id)description;
- (id)init;
- (void)dealloc;

@end

