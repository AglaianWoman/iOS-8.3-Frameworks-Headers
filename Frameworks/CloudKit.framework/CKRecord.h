//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"
#import "NSSecureCoding.h"

@class CKContainerID, CKRecordID, CKShareID, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSSet, NSString;

@interface CKRecord : NSObject <NSSecureCoding, NSCopying>
{
    NSMutableDictionary *_values;
    NSMutableDictionary *_originalValues;
    NSMutableSet *_changedKeysSet;
    BOOL _hasUpdatedShareID;
    BOOL _trackChanges;
    BOOL _knownToServer;
    BOOL _wasCached;
    BOOL _serializeProtectionData;
    NSString *_recordType;
    CKRecordID *_recordID;
    CKRecordID *_creatorUserRecordID;
    NSDate *_creationDate;
    CKRecordID *_lastModifiedUserRecordID;
    NSDate *_modificationDate;
    NSString *_modifiedByDevice;
    NSString *_etag;
    NSArray *_conflictLoserEtags;
    NSData *_protectionData;
    NSString *_previousProtectionEtag;
    NSString *_protectionEtag;
    NSString *_zoneProtectionEtag;
    NSString *_shareProtectionEtag;
    CKShareID *_shareID;
    CKShareID *_fakeShareID;
    CKShareID *_previousShareID;
    int _permission;
    NSDictionary *_pluginFields;
    CKContainerID *_containerID;
}

+ (BOOL)supportsSecureCoding;
+ (BOOL)accessInstanceVariablesDirectly;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
@property(copy, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(copy, nonatomic) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(nonatomic) BOOL trackChanges; // @synthesize trackChanges=_trackChanges;
@property(readonly, nonatomic) BOOL hasUpdatedShareID; // @synthesize hasUpdatedShareID=_hasUpdatedShareID;
@property(retain, nonatomic) NSSet *changedKeysSet; // @synthesize changedKeysSet=_changedKeysSet;
@property(copy, nonatomic) CKRecordID *creatorUserRecordID; // @synthesize creatorUserRecordID=_creatorUserRecordID;
@property(copy, nonatomic) CKRecordID *lastModifiedUserRecordID; // @synthesize lastModifiedUserRecordID=_lastModifiedUserRecordID;
- (id)_initSkippingValidationWithRecordType:(id)arg1 recordID:(id)arg2;
@property(readonly, nonatomic) BOOL hasModifiedPropertiesRequiringEncryption;
@property(retain, nonatomic) CKShareID *fakeShareID; // @synthesize fakeShareID=_fakeShareID;
@property(retain, nonatomic) CKShareID *previousShareID; // @synthesize previousShareID=_previousShareID;
@property(retain, nonatomic) NSString *shareProtectionEtag; // @synthesize shareProtectionEtag=_shareProtectionEtag;
@property(retain, nonatomic) NSString *zoneProtectionEtag; // @synthesize zoneProtectionEtag=_zoneProtectionEtag;
@property(readonly, nonatomic) BOOL hasModifiedEncryptedData;
- (id)copyWithOriginalValues;
- (id)changedKeys;
@property(readonly, nonatomic) BOOL hasPropertiesRequiringEncryption;
@property(copy, nonatomic) NSString *recordType; // @synthesize recordType=_recordType;
@property int permission; // @synthesize permission=_permission;
@property(copy, nonatomic) NSString *modifiedByDevice; // @synthesize modifiedByDevice=_modifiedByDevice;
@property(retain, nonatomic) NSString *previousProtectionEtag; // @synthesize previousProtectionEtag=_previousProtectionEtag;
@property(retain, nonatomic) NSString *protectionEtag; // @synthesize protectionEtag=_protectionEtag;
@property(retain, nonatomic) NSData *protectionData; // @synthesize protectionData=_protectionData;
@property(readonly, nonatomic) BOOL hasEncryptedData;
@property(readonly, nonatomic) BOOL containsAssetValues;
- (id)CKPropertiesDescription;
@property(nonatomic) BOOL serializeProtectionData; // @synthesize serializeProtectionData=_serializeProtectionData;
@property(nonatomic, getter=isKnownToServer) BOOL knownToServer; // @synthesize knownToServer=_knownToServer;
@property(copy, nonatomic) CKContainerID *containerID; // @synthesize containerID=_containerID;
@property(retain, nonatomic) CKShareID *shareID; // @synthesize shareID=_shareID;
@property(copy, nonatomic) NSDictionary *pluginFields; // @synthesize pluginFields=_pluginFields;
- (id)initWithRecordType:(id)arg1 recordID:(id)arg2;
@property(readonly, copy, nonatomic) NSString *recordChangeTag;
@property(copy, nonatomic) CKRecordID *recordID; // @synthesize recordID=_recordID;
@property(retain, nonatomic) NSArray *conflictLoserEtags; // @synthesize conflictLoserEtags=_conflictLoserEtags;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(nonatomic) BOOL wasCached; // @synthesize wasCached=_wasCached;
- (void).cxx_destruct;
@property(retain, nonatomic) NSDictionary *values; // @synthesize values=_values;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)debugDescription;
- (id)description;
- (id)init;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)allKeys;
- (id)valueForKey:(id)arg1;
- (void)setNilValueForKey:(id)arg1;
- (id)allTokens;
- (id)initWithRecordType:(id)arg1 zoneID:(id)arg2;
- (id)initWithRecordType:(id)arg1;
- (void)encodeSystemFieldsWithCoder:(id)arg1;
- (BOOL)_checkProperties:(BOOL)arg1 withValueCheckBlock:(CDUnknownBlockType)arg2;
- (id)_allStrings;
- (void)_validateRecordValue:(id)arg1;
- (void)resetChangedKeys;
@property(retain, nonatomic) NSDictionary *originalValues; // @synthesize originalValues=_originalValues;
- (void)_validateRecordKey:(id)arg1;
- (void)_validateRecordName:(id)arg1;
- (void)CKAssignToContainerWithID:(id)arg1;

@end

